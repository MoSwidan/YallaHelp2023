@using Microsoft.Extensions.Primitives;
@if (cities.Count > 0)
{
    <select @onchange="SelectCity" class="form-select text-center px-md-0 px-1" aria-label="Default select example" dir="rtl">
        <option disabled selected>المدينة</option>
        <option value="">الكل</option>
        @foreach (var city in cities)
        {
            <option value="@city.City_Id">@city.Name</option>
        }
    </select>
}
else
{
    <select disabled  class="form-select text-center px-0" aria-label="Default select example" dir="rtl">
        <option disabled selected>المدينة</option>
    </select>
}

@code {
    [Parameter]
    public string? Selected_Governrate { get; set; }
    public string? Selected_City_Id = "";
    private List<City>? cities = new List<City>();
    protected override async Task OnParametersSetAsync()
    {
        await LoadCitys(Selected_Governrate);
    }
    public async void SelectCity(ChangeEventArgs eventArgs)
    {
        Selected_City_Id = eventArgs?.Value?.ToString();
        await InvokeAsync(StateHasChanged);
        _app.NotifyStateChanged();
    }
    public async Task LoadCitys(string? Governrate_ID)
    {
        CityResponse result = new CityResponse();
        try
        {
            result = await Http.GetFromJsonAsync<CityResponse>($"api/City/GetAllCitys");
            if (result.Code == "200")
            {
                if (result.Data != null)
                {
                    cities = result.Data;
                    cities = cities.Where(x => x.Governorate_Id.ToString() == Governrate_ID).ToList<City>();
                    await InvokeAsync(StateHasChanged);
                }
            }
        }
        catch (Exception ex)
        {


        }
    }
}
