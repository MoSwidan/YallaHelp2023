<style>
    #commentsview::-webkit-scrollbar {
        display:none;
    }

    #commentarea{
        resize:none;
        height:33px;
        max-height:80px;
        border:none;
        overflow:scroll;
        border-radius:20px;
        padding:6px 15px;
        font-size:14px;
    }
    #commentarea::-webkit-scrollbar{
        display:none;
    }
</style>
<div dir="rtl" class="container-fluid scrollarea d-none p-0" style="position:fixed;z-index:3080;top:0;left:0;height:100vh;background-color:rgba(0,0,0,0.5);overflow-y:hidden;" id="@(PostId.ToString()+"app")">
    <div class="justify-content-center rounded align-content-center row p-0 m-auto w-100" style="position:absolute;top:0vh;height:100%;">
        <div class="d-flex flex-column bg-light justify-content-md-center col-md-8 col-lg-6  postion-fixed p-0 h-100">
            <div class="coment-bottom p-2 px-2">
                <div class="row  pt-2 me-1 justify-content-center  text-end">
                    <i onclick="document.getElementById('@(PostId.ToString()+"app")').classList.toggle('d-none')" class="fa fa-times text-danger fs-3" style="cursor:pointer;"></i>
                </div>
                <hr style="opacity:0.1;"/>
            </div>           
            <div id="commentsview" class="coment-bottom   p-0" style="overflow-y:scroll;overflow-x:hidden;height:100%;">
                @if (ShowData)
                {
                    @if (CommentsList.Data.Count > 0)
                    {
                        @foreach (var comment in CommentsList.Data)
                        {
                            <div class="commented-section mx-3 text-dark shadow rounded bg-white my-3 p-2">
                                <div class="d-flex flex-column align-items-start commented-user ">
                                    <div class="row w-100 align-items-center justify-content-start pt-2 pe-2">
                                        <div style="width:45px;" class=" ms-2 me-3 p-0">
                                            <img style="height:45px;width:45px;" class="rounded-circle" src="@comment.Image_Url">
                                        </div>
                                        <div class="col-6 text-end  p-0 ">
                                            <p class="text-end fw-bold p-0 mb-0 me-1" style="font-size:13px;">@(comment.First_Name + " " + comment.Last_Name)</p>
                                            <p class="pt-1 px-0 m-0" style="font-size:11px;">
                                                <DateDiffreanceCalc Time_Stamp="@comment.TimeStamp" />
                                            </p>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 text-end  mt-2 mb-1 px-2 p-1 bg-light py-2  text-dark" style="font-size:15px;">
                                    @comment.Comment_Content
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="row justify-content-center align-content-center h-100 align-items-center py-4" style="overflow:hidden;">
                            <lottie-player src="https://assets1.lottiefiles.com/packages/lf20_6PnLAF.json" speed="1" style="width:220px; height:120px;" loop autoplay></lottie-player>
                            <div class="fs-5 text-center mt-1" style="">
                                لا يوجد تعليقات
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="row justify-content-center align-content-center h-100 align-items-center py-4" style="overflow:hidden;">
                        <lottie-player src="https://assets8.lottiefiles.com/packages/lf20_usmfx6bp.json" speed="1" style="width:220px; height:120px;" loop autoplay></lottie-player>
                        <div class="fs-5 text-center mt-1" style="">
                            جاري تحميل التعليقات...
                        </div>
                    </div>
                }
            </div>
            @if (!string.IsNullOrEmpty(_app.AccountData.First_Name))
            {
                <div class="d-flex flex-row add-comment-section mt-4 mb-4">
                    <textarea onkeyup="textAreaAdjust(this)" id="commentarea" class="w-100 mx-3 shadow-sm" @bind="CommentContent" @bind:event="oninput" placeholder="أضف تعليق" />
                   <button @onclick='()=>AddComment()' class="p-0 text-center rounded border-0 bg-transparent" style="position:absolute;left:27px;bottom:28.5px;" type="button">
                        <svg xmlns="http://www.w3.org/2000/svg" width="20px" height="20px" viewBox="0 0 24 24" fill="none">
                            <path fill-rule="evenodd" clip-rule="evenodd" d="M19.2111 2.06722L3.70001 5.94499C1.63843 6.46039 1.38108 9.28612 3.31563 10.1655L8.09467 12.3378C9.07447 12.7831 10.1351 12.944 11.1658 12.8342C11.056 13.8649 11.2168 14.9255 11.6622 15.9053L13.8345 20.6843C14.7139 22.6189 17.5396 22.3615 18.055 20.3L21.9327 4.78886C22.3437 3.14517 20.8548 1.6563 19.2111 2.06722ZM8.92228 10.517C9.85936 10.943 10.9082 10.9755 11.8474 10.6424C12.2024 10.5165 12.5417 10.3383 12.8534 10.1094C12.8968 10.0775 12.9397 10.0446 12.982 10.0108L15.2708 8.17974C15.6351 7.88831 16.1117 8.36491 15.8202 8.7292L13.9892 11.018C13.9553 11.0603 13.9225 11.1032 13.8906 11.1466C13.6617 11.4583 13.4835 11.7976 13.3576 12.1526C13.0244 13.0918 13.057 14.1406 13.4829 15.0777L15.6552 19.8567C15.751 20.0673 16.0586 20.0393 16.1147 19.8149L19.9925 4.30379C20.0372 4.12485 19.8751 3.96277 19.6962 4.00751L4.18509 7.88528C3.96065 7.94138 3.93264 8.249 4.14324 8.34473L8.92228 10.517Z" fill="#0F1729" />
                        </svg>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Guid? PostId { get; set; }
    public int CommentsCount { get; set; }
    private string CommentContent = "";
    public CommentResponse? CommentsList = new CommentResponse();
    private bool ShowData = false;
    public async Task GetPostComments()
    {
        try
        {
            @if (PostId != null)
            {
                CommentsList = await Http.GetFromJsonAsync<CommentResponse>($"api/Comment/GetPostComments?postid={PostId}");
                if (CommentsList?.Meassage == "Ok")
                {
                    ShowData = true;
                    if (CommentsList.Data != null)
                    {
                        CommentsCount = CommentsList.Data.Count;
                    }
                    await InvokeAsync(StateHasChanged);
                }
                else
                {
                    ShowData = false;
                }
            }

        }
        catch (Exception ex)
        {

        }

    }
    private async Task AddComment()
    {
        try
        {
            if (!string.IsNullOrEmpty(CommentContent))
            {
                Comment Comment = new Comment
                {
                    Post_Id = PostId,
                    User_Id = _app.AccountData.User_Id,
                    TimeStamp = $"{DateTime.Now.ToLongDateString()} {DateTime.Now.ToLongTimeString()}",
                    Comment_Id = new Guid(),
                    Comment_Content = CommentContent
                };
                var response = await Http.PostAsJsonAsync<Comment>("api/Comment/AddPostComment", Comment);
                var responseStatusCode = response.StatusCode;
                var responseBody = await response.Content.ReadAsStringAsync();
                if (!string.IsNullOrWhiteSpace(responseBody))
                {
                    var deserilaize = Newtonsoft.Json.JsonConvert.DeserializeObject<BaseResponse>(responseBody);
                    if (deserilaize.Code == "200")
                    {

                        _alert.ShowAlert("تم إضافة تعليق", "done");
                        CommentContent = "";
                        await GetPostComments();
                        _app.NotifyStateChanged();
                    }
                    else
                    {
                        _alert.ShowAlert($"حدث خطاء", "error");

                    }
                    await InvokeAsync(StateHasChanged);
                }
            }
            else
            {
                _alert.ShowAlert("أضف تعليق أولا", "info");
            }
        }
        catch (Exception ex)
        {

        }
    }
    protected override void OnInitialized()
    {
        _app.OnChange += StateHasChanged;
        base.OnInitialized();
    }


}
