@if (governrates.Count > 0)
{
    <select id="@Id" @onchange="SelectGovernrate" class="form-select text-center px-md-0 px-1" aria-label="Default select example" dir="rtl">
        <option disabled selected>المحافظة</option>
        @if (ShowAllOption)
        {
            <option value="">الكل</option>
        }
        @foreach (var governrate in governrates)
        {
            <option  value="@governrate.Governorate_Id">@governrate.Name</option>
        }
    </select>
}
else
{
    <select disabled class="placeholder form-select text-center px-0" aria-label="Default select example" dir="rtl">
        <option disabled selected>المحافظة</option>
    </select>
}

@code {
    private List<Governorate> governrates = new List<Governorate>();
    public string? Selected_Governrate_Id = "";
    [Parameter]
    public string? Id { get; set; }
    [Parameter]
    public bool ShowAllOption { get; set; }
    public async Task LoadGovernorates()
    {
        GovernorateResponse result = new GovernorateResponse();
        try
        {
            result = await Http.GetFromJsonAsync<GovernorateResponse>($"api/Governorate/GetAllGovernorates");
            if (result.Code == "200")
            {
                if (result.Data != null)
                {
                    governrates = result.Data;
                    await InvokeAsync(StateHasChanged);
                }
            }
        }
        catch (Exception ex)
        {


        }
    }
    public async void SelectGovernrate(ChangeEventArgs eventArgs)
    {
        Selected_Governrate_Id = eventArgs?.Value?.ToString();
        await InvokeAsync(StateHasChanged);
        _app.NotifyStateChanged();
        await localStorage.SetItemAsync(Id, Selected_Governrate_Id);
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var gov_id = await localStorage.GetItemAsync<string>(Id);
                if (!string.IsNullOrEmpty(gov_id))
                {
                    await JS.InvokeVoidAsync("selectgover", Id, gov_id);
                    Selected_Governrate_Id = gov_id;
                    await InvokeAsync(StateHasChanged);
                    _app.NotifyStateChanged();
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
    }
}
