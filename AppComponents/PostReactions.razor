<div class="w-100 row text-center bg-white m-0 rounded-bottom p-2" style="font-size:13px;">
    <div class="col-6 text-end p-0" style="height:20px;">
        @if (comment.CommentsCount > 0)
        {
            @comment.CommentsCount
            <span class="me-1">تعليق</span>
        }
    </div>
    <div class="col-6 text-start p-0">
        @if (LikesList?.Data?.Count > 0)
        {
            @LikesList?.Data?.Count
            <span class="me-1">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="darkblue" width="17px" height="17px" viewBox="0 0 512 512" id="_x30_1" version="1.1" xml:space="preserve"><path d="M256,0C114.615,0,0,114.615,0,256s114.615,256,256,256s256-114.615,256-256S397.385,0,256,0z M165.938,357.875  c0,6.731-5.457,12.188-12.188,12.188h-36.562c-6.731,0-12.188-5.457-12.188-12.188V205.531c0-6.731,5.457-12.188,12.188-12.188  h36.562c6.731,0,12.188,5.457,12.188,12.188V357.875z M415.951,233.929l-28.383,108.8c-4.2,16.1-18.74,27.333-35.378,27.333H251.25  c-26.924,0-48.75-21.826-48.75-48.75V213.537c0-12.929,5.136-25.329,14.279-34.471l70.855-70.855  c4.017-4.017,9.464-6.273,15.145-6.273h0c16.169,0,26.507,17.23,18.898,31.497l-22.202,41.628  c-4.416,8.281,1.584,18.281,10.969,18.281h74.152c17.897,0,32.405,14.508,32.405,32.405  C417,228.509,416.647,231.258,415.951,233.929z" /></svg>
            </span>
        }
        
    </div>
</div>
<div class="w-100 row text-center bg-white m-0 rounded-bottom p-2  border-top">
    <div class="col-6 text-center" style="cursor:pointer;" onclick="document.getElementById('@(PostId.ToString()+"app")').classList.toggle('d-none')">
        <i class="fal fa-comment-dots ps-2 fs-5"></i>
        <span style="font-size: 14px;">التعليقات</span>
    </div>
    @if (_app.AccountData.First_Name != null)
    {
        <div class="col-6 text-center border-right @(CheckLike == true ? "text-primary":" ")" style="cursor:pointer;" @onclick="ToggleLike">
            <i class="@(CheckLike == true ? "fa":"fal") fa-thumbs-up ps-2 fs-5"></i>
            <span style="font-size: 14px;">أعجبني</span>
        </div>
    }
    else
    {
        <div class="col-6 text-center border-right" @onclick='()=>_alert.ShowAlert("قم بتسجيل الدخول أولا","warn")'>
            <i class="fal fa-thumbs-up ps-2 fs-5" style="opacity:0.4;"></i>
            <span style="opacity:0.4;font-size: 14px;">أعجبني</span>
        </div>
    }

</div>
<Comments PostId="PostId" @ref="@comment" />

@code {
    [Parameter]
    public Guid PostId { get; set; }
    private bool ShowData = false;
    Comments comment = new Comments();
    private bool CheckLike = false;
    public int? LikesCount { get; set; }
    private LikeResponse? LikesList = new LikeResponse();
    protected override void OnInitialized()
    {
        _app.OnChange += StateHasChanged;
        base.OnInitialized();
    }
    protected override async Task OnParametersSetAsync()
    {
        if (PostId != null)
        {
            await GetPostLikes();
        }
        await comment.GetPostComments();
    }
    private async Task GetPostLikes()
    {
        try
        {
            @if (PostId != null)
            {
                LikesList = await Http.GetFromJsonAsync<LikeResponse>($"api/Like/GetPostLikes?postid={PostId}");
                if (LikesList?.Code == "200")
                {
                    if (LikesList?.Data?.Count > 0)
                    {
                        var checkuserlike = LikesList?.Data?.Where(x => x.User_Id == _app.UserAuthData.User_Id).First().User_Id;
                        if (checkuserlike != null)
                        {
                            CheckLike = true;
                        }
                        else
                        {
                            CheckLike = false;
                        }
                    }
                    await InvokeAsync(StateHasChanged);
                }
            }
            
        }
        catch (Exception ex)
        {

        }

    }
    private async Task ToggleLike()
    {
        try
        {
            Like like = new Like
            {
                Post_Id = PostId,
                User_Id = _app.AccountData.User_Id,
                TimeStamp = $"{DateTime.Now.ToLongDateString()} {DateTime.Now.ToLongTimeString()}",
                Like_Id = new Guid()
            };
            var response = await Http.PostAsJsonAsync<Like>("api/Like/AddPostLikes", like);
            var responseStatusCode = response.StatusCode;
            var responseBody = await response.Content.ReadAsStringAsync();
            if (!string.IsNullOrWhiteSpace(responseBody))
            {
                var deserilaize = Newtonsoft.Json.JsonConvert.DeserializeObject<BaseResponse>(responseBody);
                if (deserilaize.Code == "200")
                {
                    if (deserilaize.Meassage == "Add")
                    {
                        _alert.ShowAlert("تم إضافة إعجاب للمنشور", "done");
                        CheckLike = true;
                    }else if (deserilaize.Meassage == "Remove")
                    {
                        _alert.ShowAlert("تم إلغاء الاعجاب بالمنشور", "done");
                        CheckLike = false;
                    }
                    await GetPostLikes();
                    await InvokeAsync(StateHasChanged);
                }
                else
                {
                    Console.WriteLine(deserilaize.Meassage);
                    Console.WriteLine(deserilaize.Code);
                    _alert.ShowAlert($"حدث خطاء", "error");
                }
            }
        }
        catch (Exception ex)
        {
            
        }
    }
}
