@page "/Blog"
@using System.Data;
@using Dapper;
@using Microsoft.Data.SqlClient;
<Header />
<!-- ======== main started ========= -->
<main class="charity-01-main position-relative" style="margin-top:102px;">
    <Comments />
    <!-- ============abt-01 Section  Start============ -->
    <BreadCrumb BaseRouteName="الرئيسيه" BaseRouteUrl="/" SubRouteName="المنشورات" />
    <!-- ========bg-03 started ========= -->
   
    <section class="bg-03">
        <div class="container">
            <!--Tittle-->
            <div class="row">
                <div class="col-12">
                    <div class="head-01">
                        <h2>
                            <i class="fal fa-smile-beam"></i>
                        </h2>
                        <p>
                           <q class="fs-5">
                                حينما تساعد الاخرين تجد السعادة
                           </q>                            
                        </p>
                    </div>
                </div>
            </div>
            <!--Search BAR-->
            <div class="row my-3 mb-4 justify-content-center">
                <div class="col-md-8 col-12 position-relative">
                    <input @bind="Serach" @bind:event="oninput" class="w-100 text-end border-0 p-2 px-5 rounded shadow " type="search" placeholder="أبحث هنا" />
                    <i class="fal fa-search " style="position:absolute; right:28px; top:13px;cursor:pointer;"></i>
                </div>
            </div>
            <hr />
            <!--Filters-->
            <div class="row my-3 justify-content-center">
                <div class="col-md-3 col-6 text-center my-1">
                    <StatusSelector @ref="Statu" />
                </div>
                <div class="col-md-3 col-6 text-center my-1">
                    <CategorySelector @ref="Categoryes" />
                </div>
                <div class="col-md-3 col-6 text-center my-1">
                    <CitySelector @ref="Citys" Selected_Governrate="@Governrates?.Selected_Governrate_Id" />
                </div>
                <div class="col-md-3 col-6 text-center my-1">
                    <GovernrateSelector @ref="Governrates" Id="gov"/>
                </div>
            </div>
            <hr />
            <!--Posts-->
            <div class="row justify-content-center align-items-center">
                @if (ShowData)
                {
                    if (postsList?.Data.FindAll(x => x.Governrate_Id.ToString().Contains(Governrates.Selected_Governrate_Id) && x.City_Id.ToString().Contains(Citys.Selected_City_Id) && x.Status_Id.ToString().Contains(Statu.Selected_Status_Id) && x.Category_Id.ToString().Contains(Categoryes.Selected_Category_Id) && x.Post_Tittle.Contains(Serach) && x.Post_Content.Contains(Serach)).ToList().Count > 0)
                    {

                    }
                    else
                    {
                        <NotFoundPage Message="لا يوجد نتائج لبحثك" ImgUrl="assets/images/noting.jpg" />
                    }
                    @foreach (var post in postsList?.Data.FindAll(x => x.Governrate_Id.ToString().Contains(Governrates.Selected_Governrate_Id) && x.City_Id.ToString().Contains(Citys.Selected_City_Id) && x.Status_Id.ToString().Contains(Statu.Selected_Status_Id) && x.Category_Id.ToString().Contains(Categoryes.Selected_Category_Id) && x.Post_Tittle.Contains(Serach) && x.Post_Content.Contains(Serach)))
                    {
                        <div class="p-0 mx-1" style="max-width:270px;">
                            <PostComponent postData="post" />
                        </div>
                    }  
                }
                else
                {
                    <NotFoundPage Message="لا يوجد  منشورات" ImgUrl="assets/images/noting.jpg" />
                }
            </div>
        </div>
    </section>

</main>

@code {
    private List<Post> posts = new List<Post>();
    CitySelector? Citys = new CitySelector();
    GovernrateSelector? Governrates = new GovernrateSelector();
    CategorySelector? Categoryes = new CategorySelector();
    StatusSelector? Statu = new StatusSelector();
    PostResponse? postsList = new PostResponse();
    private bool ShowData = false;
    private string Serach = "";
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Governrates?.LoadGovernorates();
            await Categoryes?.LoadCategorys();
            await Statu?.LoadStatus();
            try
            {
                postsList = await Http.GetFromJsonAsync<PostResponse>($"api/Post/GetReviwedPosts");
                if (postsList?.Code == "200")
                {
                    if (postsList?.Data?.Count > 0)
                    {
                        ShowData = true;
                        await InvokeAsync(StateHasChanged);
                    }
                }
            }
            catch (Exception ex)
            {


            }
        }
    }
    protected override void OnInitialized()
    {
        _app.OnChange += StateHasChanged;
    }
    
}